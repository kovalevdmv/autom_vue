import type { ДанныеСущности, КонфигурацияСущности } from '@/interfaces/КонфигурацияСистемы';

export enum ТипКомпонентаПредставления {
    Список = "ПредставлениеСписка",
    Элемент = "ПредставлениеЭлемента"
}

interface ЭлементИнтефейса {
    Представление: string;
    КонфигурацияСущности: КонфигурацияСущности;
}

export interface ГлавныйИнтерфейс {
    Элементы: ЭлементИнтефейса[];
}

export enum ТипыЭлемента{
    Дата = "Дата",
    Текст = "Текст",
    Число = "Число"
}

export interface ДиалоговоеОкно {
    /** 
     * Идентификатор диалогового окна (НЕ id объекта в базе данных)
     */
    id: number;
    /**
     * Конфигурация сущности с которой связано диалоговое окно
     */
    КонфигурацияСущности: КонфигурацияСущности;

    /**
     * Любый данные сущности. Если сущность связана с базой данных, то это результат запроса из базы данных.
    * На основании ДанныеСущности реактивно формируется форма.
    */
    ДанныеСущности?: ДанныеСущности;

    /**
     * Вызывает функнцию обратного вызова, передавая ей объект с выбранными данными (н.п. объект - строка таблицы)
     * @param ОбъектСДанными Объект с данными, например строка таблицы
     * @returns void
     */
    ОбработчикВыбораВнешнегоКлюча?: (ОбъектСДанными: any) => void;
    ТипКомпонентаПредставления: ТипКомпонентаПредставления;
}